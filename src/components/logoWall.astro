---
const technologies = [
  "linux",
  "cpp",
  "stm32",
  "nordic",
  "bluetooth",
  "python",
  "csharp",
  "react-native",
  "grpc",
  "threejs"
];
---

<style is:global>
  @keyframes scroll {
    from { transform: translateX(0); }
    to { transform: translateX(-50%); }
  }
</style>

<div class="relative overflow-x-hidden py-8">
  <div class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-transparent to-transparent z-20"></div>
  <div class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-transparent to-transparent z-20"></div>

  <div class="flex animate-scroll hover:animate-paused gap-12 md:gap-20 w-max">
    {[...technologies, ...technologies, ...technologies].map((tech) => (
      <div class="flex items-center gap-2 group transition-all duration-300">
        <img
          src={`/svg/${tech}.svg`}
          alt={tech}
          class="h-7 w-auto object-contain transition-transform group-hover:scale-110 opacity-60"
          width="30"
          height="30"
          loading="lazy"
        />
        <span class="text-lg font-medium text-[var(--white-icon)]">
          {tech === 'cpp' ? 'C++' :
           tech === 'csharp' ? 'C#' :
           tech === 'stm32' ? 'STM32' :
           tech === 'grpc' ? 'gRPC' :
           tech === 'threejs' ? 'Three.js' :
           tech === 'react-native' ? 'React Native' :
           tech === 'bluetooth' ? 'BLE' :
           tech.charAt(0).toUpperCase() + tech.slice(1)}
        </span>
      </div>
    ))}
  </div>
</div>

<style>
  :root {
    --bg: transparent;
  }
  
  .animate-scroll {
    animation: scroll 60s linear infinite;
  }
  
  @media (min-width: 768px) {
    .animate-scroll {
      animation-duration: 50s;
    }
  }
</style>